# SSL certificates for development
# $ mkcert -cert-file=ievgenii-cherednichenko-blog.local+1.pem -key-file=ievgenii-cherednichenko-blog.local+1-key.pem ievgenii-cherednichenko-blog.local www.ievgenii-cherednichenko-blog.local
#
# Start composition:
# $ docker-compose up -d
#
# For MacOS users (development only)
# $ docker-sync-stack start
version: '3.7'
services:
  php-apache:
    container_name: ievgenii-cherednichenko-blog.local
    # EXECUTION_ENVIRONMENT - 'development' or 'production'
    image: defaultvalue/php:7.4-${EXECUTION_ENVIRONMENT}
    # In case you need your own Dockerfile. Dockerfile example:
    # ARG EXECUTION_ENVIRONMENT
    # FROM defaultvalue/php:7.3-${EXECUTION_ENVIRONMENT}
#    build:
#      context: .
#      dockerfile: docker/Dockerfile
#      args:
#        - EXECUTION_ENVIRONMENT=${EXECUTION_ENVIRONMENT}
    user: docker:docker
    sysctls:
      - net.ipv4.ip_unprivileged_port_start=0
    restart: always
    labels:
      - traefik.enable=true
      # HTTP
      - traefik.http.routers.ievgenii-cherednichenko-blog-local-http.rule=Host(`ievgenii-cherednichenko-blog.local`,`www.ievgenii-cherednichenko-blog.local`)
      - traefik.http.routers.ievgenii-cherednichenko-blog-local-http.entrypoints=http
      - traefik.http.routers.ievgenii-cherednichenko-blog-local-http.service=ievgenii-cherednichenko-blog-local-http
      - traefik.http.services.ievgenii-cherednichenko-blog-local-http.loadbalancer.server.port=80
      - traefik.http.services.ievgenii-cherednichenko-blog-local-http.loadbalancer.server.scheme=http
      # HTTPS
      - traefik.http.routers.ievgenii-cherednichenko-blog-local-https.rule=Host(`ievgenii-cherednichenko-blog.local`,`www.ievgenii-cherednichenko-blog.local`)
      - traefik.http.routers.ievgenii-cherednichenko-blog-local-https.entrypoints=https
      - traefik.http.routers.ievgenii-cherednichenko-blog-local-https.tls=true
      - traefik.http.routers.ievgenii-cherednichenko-blog-local-https.service=ievgenii-cherednichenko-blog-local-https
      - traefik.http.services.ievgenii-cherednichenko-blog-local-https.loadbalancer.server.port=443
      - traefik.http.services.ievgenii-cherednichenko-blog-local-https.loadbalancer.server.scheme=https
    # Must add extra_hosts to be written to /etc/hosts - otherwise containerized application can not curl itself
    extra_hosts:
      - "ievgenii-cherednichenko-blog.local www.ievgenii-cherednichenko-blog.local:127.0.0.1"
      # Required for xDebug on Linux hosts till docker.host.internal is not available by default - https://github.com/docker/libnetwork/pull/2348/files
      - "host.docker.internal:172.17.0.1"
#    links:
#      - memcached
#      - redis
#      - elasticsearch
    external_links:
      - mysql80:mysql
      - mailhog
    network_mode: bridge
    environment:
      - COMPOSER_VERSION=2
      # Must be set to some of the domains for xdebug to work. Should have server configured in
      # Preferences > Language and Frameworks > PHP > Servers
      # Or just run the project with the same domain and debug enabled in the browser
      - PHP_IDE_CONFIG=serverName=ievgenii-cherednichenko-blog.local
      # Go is required to catch emails with Mailhog and mhsendmail (Sendmail replacement)
      - ADDITIONAL_PATH=/usr/local/go/bin
    volumes:
      - .:/var/www/html
      - ${SSL_CERTIFICATES_DIR}:/certs
      - ./docker/virtual-host.conf:/etc/apache2/sites-enabled/virtual-host.conf
      # IMPORTANT! The below configuration is for Mac only to enable Docker Sync Stack. Don't commit!
      #- ievgenii-cherednichenko-blog-local-sync:/var/www/html:nocopy

# IMPORTANT! The below volumes configuration is for Mac only to enable Docker Sync Stack. Don't commit!
#volumes:
#  ievgenii-cherednichenko-blog-local-sync:
#    external: true

#  redis:
#    image: redis:latest
#    network_mode: bridge
#    labels:
#      - traefik.enable=false
#    restart: always

#  memcached:
#    image: 'memcached:1.5'
#    network_mode: bridge
#    labels:
#      - traefik.enable=false
#    restart: always

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.11
#    environment:
#      - network.host=0.0.0.0
#      - http.host=0.0.0.0
#      - transport.host=127.0.0.1
#      - xpack.security.enabled=false
#      - indices.query.bool.max_clause_count=10240
#      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    restart: always
#    network_mode: bridge